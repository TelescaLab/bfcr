#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / (tmax * n))
truecov <- matrix(0, nrow = tmax, ncol = tmax)
truecov <- Btru %*% Lambda1 %*% outer(X[1,], X[1,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[1,], X[1,]) %*% t(Lambda2) %*% t(Btru)
#   geom_point() +
#   geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
#   theme_bw()
# P %>%
#   group_by(ID) %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / tmax)
# P %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / (tmax * n))
truecov <- matrix(0, nrow = tmax, ncol = tmax)
truecov <- Btru %*% Lambda1 %*% outer(X[1,], X[1,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[1,], X[1,]) %*% t(Lambda2) %*% t(Btru)
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[1,], X[1,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
persp3D(1:50,1:50, truecov)
X[1,]
X[2,]
#   geom_point() +
#   geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
#   theme_bw()
# P %>%
#   group_by(ID) %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / tmax)
# P %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / (tmax * n))
truecov <- matrix(0, nrow = tmax, ncol = tmax)
truecov <- Btru %*% Lambda1 %*% outer(X[2,], X[2,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[2,], X[2,]) %*% t(Lambda2) %*% t(Btru)
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[2,], X[2,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
persp3D(1:50,1:50, truecov)
Lambda1
Theta1
Lambda2
source('simulated_data.r')
dim(Y)
plot(Y[1,])
plot(Y[2,])
plot(Y[3,])
plot(Y[4,])
plot(Y[5,])
plot(Y[51,])
plot(Y[52,])
plot(Y[53,])
### MCMC sanity check ###
AAA <- MCMC(Y, X, Btru, 2, 5000, 5000, 1, 1)
AAA$Prec[[1]][,5000]
1/sqrt(AAA$Prec[[1]][,5000])
plot(Y[1,])
#   geom_point() +
#   geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
#   theme_bw()
# P %>%
#   group_by(ID) %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / tmax)
# P %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / (tmax * n))
truecov <- matrix(0, nrow = tmax, ncol = tmax)
truecov <- Btru %*% Lambda1 %*% outer(X[2,], X[2,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[2,], X[2,]) %*% t(Lambda2) %*% t(Btru)
persp3D(1:50,1:50, truecov)
truecov <- Btru %*% Lambda1 %*% outer(X[51,], X[51,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[51,], X[51,]) %*% t(Lambda2) %*% t(Btru)
persp3D(1:50,1:50, truecov)
AAA <- MCMC(Y, X, Btru, 1, 5000, 5000, 1, 1)
# P <- posterior_predictive_bands(AAA, c(.05, .5, .95))
# colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
# P <- as_tibble(P)
# P %>%
#   filter(ID == 2) %>%
#   ggplot(aes(x = Time, y = Y)) +
#   geom_point() +
#   geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
#   theme_bw()
# P %>%
#   group_by(ID) %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / tmax)
# P %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / (tmax * n))
truecov <- matrix(0, nrow = tmax, ncol = tmax)
truecov <- Btru %*% Lambda1 %*% outer(X[51,], X[51,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[51,], X[51,]) %*% t(Lambda2) %*% t(Btru)
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[2,], X[2,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
j
K <- 1
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[2,], X[2,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
### MCMC sanity check ###
AAA <- MCMC(Y, X, Btru, 3, 5000, 5000, 1, 1)
# P <- posterior_predictive_bands(AAA, c(.05, .5, .95))
# colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
# P <- as_tibble(P)
# P %>%
#   filter(ID == 2) %>%
#   ggplot(aes(x = Time, y = Y)) +
#   geom_point() +
#   geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
#   theme_bw()
# P %>%
#   group_by(ID) %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / tmax)
# P %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / (tmax * n))
truecov <- matrix(0, nrow = tmax, ncol = tmax)
truecov <- Btru %*% Lambda1 %*% outer(X[51,], X[51,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[51,], X[51,]) %*% t(Lambda2) %*% t(Btru)
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[2,], X[2,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
K
K <- 3
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[2,], X[2,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
persp3D(1:50,1:50, truecov)
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[51,], X[51,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
persp3D(1:50,1:50, truecov)
AAA <- MCMC(Y, X, Btru, 1, 5000, 5000, 1, 1)
# P <- posterior_predictive_bands(AAA, c(.05, .5, .95))
# colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
# P <- as_tibble(P)
# P %>%
#   filter(ID == 2) %>%
#   ggplot(aes(x = Time, y = Y)) +
#   geom_point() +
#   geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
#   theme_bw()
# P %>%
#   group_by(ID) %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / tmax)
# P %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / (tmax * n))
truecov <- matrix(0, nrow = tmax, ncol = tmax)
truecov <- Btru %*% Lambda1 %*% outer(X[51,], X[51,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[51,], X[51,]) %*% t(Lambda2) %*% t(Btru)
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[51,], X[51,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
### MCMC sanity check ###
AAA <- MCMC(Y, X, Btru, 5, 5000, 5000, 1, 1)
# P <- posterior_predictive_bands(AAA, c(.05, .5, .95))
# colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
# P <- as_tibble(P)
# P %>%
#   filter(ID == 2) %>%
#   ggplot(aes(x = Time, y = Y)) +
#   geom_point() +
#   geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
#   theme_bw()
# P %>%
#   group_by(ID) %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / tmax)
# P %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / (tmax * n))
truecov <- matrix(0, nrow = tmax, ncol = tmax)
truecov <- Btru %*% Lambda1 %*% outer(X[51,], X[51,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[51,], X[51,]) %*% t(Lambda2) %*% t(Btru)
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[51,], X[51,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
### MCMC sanity check ###
AAA <- MCMC(Y, X, Btru, 5, 5000, 5000, 1, 1)
# P <- posterior_predictive_bands(AAA, c(.05, .5, .95))
# colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
# P <- as_tibble(P)
# P %>%
#   filter(ID == 2) %>%
#   ggplot(aes(x = Time, y = Y)) +
#   geom_point() +
#   geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
#   theme_bw()
# P %>%
#   group_by(ID) %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / tmax)
# P %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / (tmax * n))
truecov <- matrix(0, nrow = tmax, ncol = tmax)
truecov <- Btru %*% Lambda1 %*% outer(X[51,], X[51,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[51,], X[51,]) %*% t(Lambda2) %*% t(Btru)
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[51,], X[51,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
K <- 5
### MCMC sanity check ###
K <- 5
AAA <- MCMC(Y, X, Btru, K, 5000, 5000, 1, 1)
# P <- posterior_predictive_bands(AAA, c(.05, .5, .95))
# colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
# P <- as_tibble(P)
# P %>%
#   filter(ID == 2) %>%
#   ggplot(aes(x = Time, y = Y)) +
#   geom_point() +
#   geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
#   theme_bw()
# P %>%
#   group_by(ID) %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / tmax)
# P %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / (tmax * n))
truecov <- matrix(0, nrow = tmax, ncol = tmax)
truecov <- Btru %*% Lambda1 %*% outer(X[51,], X[51,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[51,], X[51,]) %*% t(Lambda2) %*% t(Btru)
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[51,], X[51,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
### MCMC sanity check ###
K <- 2
AAA <- MCMC(Y, X, Btru, K, 5000, 5000, 1, 1)
# P <- posterior_predictive_bands(AAA, c(.05, .5, .95))
# colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
# P <- as_tibble(P)
# P %>%
#   filter(ID == 2) %>%
#   ggplot(aes(x = Time, y = Y)) +
#   geom_point() +
#   geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
#   theme_bw()
# P %>%
#   group_by(ID) %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / tmax)
# P %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / (tmax * n))
truecov <- matrix(0, nrow = tmax, ncol = tmax)
truecov <- Btru %*% Lambda1 %*% outer(X[51,], X[51,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[51,], X[51,]) %*% t(Lambda2) %*% t(Btru)
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[51,], X[51,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
persp3D(1:50,1:50, truecov)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
persp3D(1:50,1:50, truecov)
X[51,]
persp3D(1:50,1:50, truecov)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
persp3D(1:50,1:50, truecov)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
#   geom_point() +
#   geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
#   theme_bw()
# P %>%
#   group_by(ID) %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / tmax)
# P %>%
#   filter(Y > Lower_P & Y < Upper_P) %>%
#   summarize(coverage = n() / (tmax * n))
truecov <- matrix(0, nrow = tmax, ncol = tmax)
truecov <- Btru %*% Lambda1 %*% outer(X[1,], X[1,]) %*% t(Lambda1) %*% t(Btru) +
Btru %*% Lambda2 %*% outer(X[1,], X[1,]) %*% t(Lambda2) %*% t(Btru)
mycov <- matrix(0, nrow = 12, ncol = 12)
for(i in 1:5000){
mycov <- mycov + diag(1/AAA$Delta[[1]][,i])
# mycov <- matrix(0, nrow = tmax, ncol = tmax)
for(j in 1:K){
mycov <- mycov + AAA$Lambda[[1,i]][,,j] %*% outer(X[1,], X[1,]) %*% t(AAA$Lambda[[1,i]][,,j])
}
}
mycov <- mycov / 5000
mycov <- Btru %*% mycov %*% t(Btru)
persp3D(1:50,1:50, truecov)
# plot(eigen(mycov)$vectors[,1], type = "l")
persp3D(1:50,1:50, mycov)
P <- posterior_predictive_bands(AAA, c(.05, .5, .95))
colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
P <- as_tibble(P)
P %>%
filter(ID == 2) %>%
ggplot(aes(x = Time, y = Y)) +
geom_point() +
geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
theme_bw()
P %>%
group_by(ID) %>%
filter(Y > Lower_P & Y < Upper_P) %>%
summarize(coverage = n() / tmax)
P %>%
filter(Y > Lower_P & Y < Upper_P) %>%
summarize(coverage = n() / (tmax * n))
AAA <- MCMC(Y, X, Btru, K, 5000, 5000, 1, 1)
P <- posterior_predictive_bands(AAA, c(.05, .5, .95))
colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
P <- as_tibble(P)
P %>%
filter(ID == 2) %>%
ggplot(aes(x = Time, y = Y)) +
geom_point() +
geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
theme_bw()
P %>%
group_by(ID) %>%
filter(Y > Lower_P & Y < Upper_P) %>%
summarize(coverage = n() / tmax)
P %>%
filter(Y > Lower_P & Y < Upper_P) %>%
summarize(coverage = n() / (tmax * n))
AAA <- MCMC(Y, X, Btru, K, 5000, 5000, 1, 1)
P <- posterior_predictive_bands(AAA, c(.05, .5, .95))
colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
P <- as_tibble(P)
P %>%
filter(ID == 2) %>%
ggplot(aes(x = Time, y = Y)) +
geom_point() +
geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
theme_bw()
P %>%
group_by(ID) %>%
filter(Y > Lower_P & Y < Upper_P) %>%
summarize(coverage = n() / tmax)
P %>%
filter(Y > Lower_P & Y < Upper_P) %>%
summarize(coverage = n() / (tmax * n))
source('simulated_data.r')
K <- 2
AAA <- MCMC(Y, X, Btru, K, 5000, 5000, 1, 1)
P <- posterior_predictive_bands(AAA, c(.05, .5, .95))
colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
P <- as_tibble(P)
P %>%
filter(ID == 2) %>%
ggplot(aes(x = Time, y = Y)) +
geom_point() +
geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
theme_bw()
P %>%
group_by(ID) %>%
filter(Y > Lower_P & Y < Upper_P) %>%
summarize(coverage = n() / tmax)
P %>%
filter(Y > Lower_P & Y < Upper_P) %>%
summarize(coverage = n() / (tmax * n))
P %>%
filter(ID == 4) %>%
ggplot(aes(x = Time, y = Y)) +
geom_point() +
geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
theme_bw()
P <- posterior_predictive_bands(AAA, c(.025, .5, .975))
colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
P <- as_tibble(P)
P %>%
filter(ID == 4) %>%
ggplot(aes(x = Time, y = Y)) +
geom_point() +
geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
theme_bw()
P %>%
group_by(ID) %>%
filter(Y > Lower_P & Y < Upper_P) %>%
summarize(coverage = n() / tmax)
P %>%
filter(Y > Lower_P & Y < Upper_P) %>%
summarize(coverage = n() / (tmax * n))
P <- posterior_predictive_bands(AAA, c(.1, .5, .9))
colnames(P) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
P <- as_tibble(P)
P %>%
filter(ID == 4) %>%
ggplot(aes(x = Time, y = Y)) +
geom_point() +
geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
theme_bw()
P %>%
group_by(ID) %>%
filter(Y > Lower_P & Y < Upper_P) %>%
summarize(coverage = n() / tmax)
P %>%
filter(Y > Lower_P & Y < Upper_P) %>%
summarize(coverage = n() / (tmax * n))
