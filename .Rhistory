geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.3, fill = "blue") +
geom_line(aes(y = Mean)) +
xlab("Frequency") +
ylab("Power") +
ggtitle("Old TD") +
theme_bw()
gridExtra::grid.arrange(p1, p2, nrow = 1)
mcmc_results$Beta[[1]][,,5000]
plot(Basis %*% mcmc_results$Beta[[1]][,2,5000], type = "l")
### Some covariance visualization ###
Group <- 0
Month <- 60
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eig_names <- c()
eig_labs <- c()
for(k in 1:evals){
eig_names <- c(eig_names, paste("Eigenfunction", k))
eig_labs <- c(eig_labs, paste("Eigenfunction", k, " ", round(eigen_bands$eigenval_pve_intervals[1,k], 2), "-", round(eigen_bands$eigenval_pve_intervals[3,k], 2)))
}
names(eig_labs) <- eig_names
eigen_bands_tibble <- tibble(Frequency = rep(t_paf, evals),
number = factor(rep(eig_names, each = length(t_paf))),
lower = c(eigen_bands$lower),
mean = c(eigen_bands$mean),
upper = c(eigen_bands$upper),
val_lower = rep(eigen_bands$eigenval_intervals[1,], each = length(t_paf)),
val_median = rep(eigen_bands$eigenval_intervals[2,], each = length(t_paf)),
val_upper = rep(eigen_bands$eigenval_intervals[3,], each = length(t_paf)))
eigen_bands_tibble %>%
ggplot(aes(x = Frequency)) +
geom_ribbon(aes(ymin = lower, ymax = upper, fill = number), alpha = 0.5) +
geom_line(aes(y = mean)) +
facet_wrap(number ~., labeller = labeller(number = eig_labs)) +
ylab("") +
theme_bw() +
theme(legend.position="none")
### Some covariance visualization ###
Group <- 1
Month <- 60
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eig_names <- c()
eig_labs <- c()
for(k in 1:evals){
eig_names <- c(eig_names, paste("Eigenfunction", k))
eig_labs <- c(eig_labs, paste("Eigenfunction", k, " ", round(eigen_bands$eigenval_pve_intervals[1,k], 2), "-", round(eigen_bands$eigenval_pve_intervals[3,k], 2)))
}
names(eig_labs) <- eig_names
eigen_bands_tibble <- tibble(Frequency = rep(t_paf, evals),
number = factor(rep(eig_names, each = length(t_paf))),
lower = c(eigen_bands$lower),
mean = c(eigen_bands$mean),
upper = c(eigen_bands$upper),
val_lower = rep(eigen_bands$eigenval_intervals[1,], each = length(t_paf)),
val_median = rep(eigen_bands$eigenval_intervals[2,], each = length(t_paf)),
val_upper = rep(eigen_bands$eigenval_intervals[3,], each = length(t_paf)))
eigen_bands_tibble %>%
ggplot(aes(x = Frequency)) +
geom_ribbon(aes(ymin = lower, ymax = upper, fill = number), alpha = 0.5) +
geom_line(aes(y = mean)) +
facet_wrap(number ~., labeller = labeller(number = eig_labs)) +
ylab("") +
theme_bw() +
theme(legend.position="none")
### Some covariance visualization ###
Group <- 1
Month <- 30
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eig_names <- c()
eig_labs <- c()
eigen_bands$magnitude
Month <- 120
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eigen_bands$magnitude
### Some covariance visualization ###
Group <- 0
Month <- 30
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eigen_bands$magnitude
Month <- 120
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eigen_bands$magnitude
abline(a = 0)
abline(h = 0)
mcmc_results$Lambda[[1, 5000]][,,1]
outer(mcmc_results$Lambda[[1, 5000]][,1,1],mcmc_results$Lambda[[1, 5000]][,1,1])
mcmc_results$Lambda[[1, 5000]][,,2]
mcmc_results$Lambda[[1, 5000]][,,3]
mcmc_results$Lambda[[1, 5000]][,,4]
plot(Basis %*% mcmc_results$Beta[[1]][,4,5000], type="l")
plot(Basis %*% mcmc_results$Beta[[1]][,1,5000], type="l")
plot(Basis %*% mcmc_results$Beta[[1]][,2,5000], type="l")
plot(Basis %*% mcmc_results$Beta[[1]][,3,5000], type="l")
plot(Basis %*% mcmc_results$Beta[[1]][,4,5000], type="l")
mcmc_results <- run_mcmc_Morris(Y_paf, t_paf, X_paf, X_paf, Basis, K, iter = 5000, burnin = 10000, nchains = 1, thin = 5, loglik = 1)
### Visualization ###
sub <- 1
posterior_intervals <- get_posterior_predictive_bands2(mcmc_results, c(.025, .5, .975))
colnames(posterior_intervals) <- c("ID", "Frequency", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
posterior_intervals <- as_tibble(posterior_intervals)
posterior_intervals %>%
filter(ID == sub) %>%
ggplot(aes(x = Frequency, y = Y)) +
geom_point(na.rm = TRUE) +
geom_ribbon(aes(ymin = Lower_P, ymax = Upper_P), alpha = 0.3) +
theme_bw()
posterior_intervals %>%
filter(ID == sub) %>%
ggplot(aes(x = Frequency, y = Y)) +
geom_point(na.rm = TRUE) +
geom_line(aes(y = Median_M)) +
theme_bw()
posterior_intervals %>%
filter(ID == sub) %>%
ggplot(aes(x = Frequency, y = Y)) +
geom_point(na.rm = TRUE) +
geom_ribbon(aes(ymin = Lower_M, ymax = Upper_M), alpha = 0.3) +
theme_bw()
posterior_intervals %>%
mutate(coverage_flag = ifelse(Y > Lower_P & Y < Upper_P, 1, 0)) %>%
group_by(ID) %>%
summarize(coverage_summary = sum(coverage_flag, na.rm = TRUE) / n())
posterior_intervals %>%
mutate(coverage_flag = ifelse(Y > Lower_P & Y < Upper_P, 1, 0)) %>%
summarize(coverage_summary = sum(coverage_flag, na.rm = TRUE) / n())
### Goodness of fit ###
mcmc_omnibus_fit <- get_omnibus_fit2(mcmc_results)
plot(mcmc_omnibus_fit$statistic_obs, mcmc_omnibus_fit$statistic_rep, xlab = "Chi2 observed", ylab = "Chi2 repitition")
abline(a = 0, b = 1)
sum(mcmc_omnibus_fit$statistic_rep > mcmc_omnibus_fit$statistic_obs) / 5000
### Posterior mean bands ###
alpha <- .05
# Younger TD
Group <- 0
Month <- 30
poly_coef <- predict(poly_age, Month)
xi <- c(1, Group, poly_coef, Group * poly_coef)
coef_bands <- get_posterior_means(mcmc_results, xi, alpha)
coef_bands <- cbind(t_paf, coef_bands)
colnames(coef_bands) <- c("Frequency", "Lower", "Mean", "Upper")
coef_bands <- as_tibble(coef_bands)
# Older TD
Group <- 0
Month <- 120
p1 <- coef_bands %>%
ggplot(aes(x = Frequency)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.3, fill = "blue") +
geom_line(aes(y = Mean)) +
xlab("Frequency") +
ylab("Power") +
ggtitle("Young TD") +
theme_bw()
poly_coef <- predict(poly_age, Month)
xi <- c(1, Group, poly_coef, Group * poly_coef)
coef_bands <- get_posterior_means(mcmc_results, xi, alpha)
coef_bands <- cbind(t_paf, coef_bands)
coef_bands <- as_tibble(coef_bands)
colnames(coef_bands) <- c("Frequency", "Lower", "Mean", "Upper")
p2 <- coef_bands %>%
ggplot(aes(x = Frequency)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.3, fill = "blue") +
geom_line(aes(y = Mean)) +
xlab("Frequency") +
ylab("Power") +
ggtitle("Old TD") +
theme_bw()
gridExtra::grid.arrange(p1, p2, nrow = 1)
# Younger ASD
Group <- 1
Month <- 30
poly_coef <- predict(poly_age, Month)
xi <- c(1, Group, poly_coef, Group * poly_coef)
coef_bands <- get_posterior_means(mcmc_results, xi, alpha)
coef_bands <- cbind(t_paf, coef_bands)
colnames(coef_bands) <- c("Frequency", "Lower", "Mean", "Upper")
coef_bands <- as_tibble(coef_bands)
p3 <- coef_bands %>%
ggplot(aes(x = Frequency)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.3, fill = "blue") +
geom_line(aes(y = Mean)) +
xlab("Frequency") +
ylab("Response") +
ggtitle("Young ASD") +
theme_bw()
# Older ASD
Group <- 1
Month <- 120
poly_coef <- predict(poly_age, Month)
xi <- c(1, Group, poly_coef, Group * poly_coef)
coef_bands <- get_posterior_means(mcmc_results, xi, alpha)
coef_bands <- cbind(t_paf, coef_bands)
colnames(coef_bands) <- c("Frequency", "Lower", "Mean", "Upper")
coef_bands <- as_tibble(coef_bands)
p4 <- coef_bands %>%
ggplot(aes(x = Frequency)) +
geom_ribbon(aes(ymin = Lower, ymax = Upper), alpha = 0.3, fill = "blue") +
geom_line(aes(y = Mean)) +
xlab("Frequency") +
ylab("Response") +
ggtitle("Old ASD") +
theme_bw()
gridExtra::grid.arrange(p3, p4, nrow = 1)
### Some covariance visualization ###
Group <- 0
Month <- 30
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eig_names <- c()
eig_labs <- c()
for(k in 1:evals){
eig_names <- c(eig_names, paste("Eigenfunction", k))
eig_labs <- c(eig_labs, paste("Eigenfunction", k, " ", round(eigen_bands$eigenval_pve_intervals[1,k], 2), "-", round(eigen_bands$eigenval_pve_intervals[3,k], 2)))
}
names(eig_labs) <- eig_names
eigen_bands_tibble <- tibble(Frequency = rep(t_paf, evals),
number = factor(rep(eig_names, each = length(t_paf))),
lower = c(eigen_bands$lower),
mean = c(eigen_bands$mean),
upper = c(eigen_bands$upper),
val_lower = rep(eigen_bands$eigenval_intervals[1,], each = length(t_paf)),
val_median = rep(eigen_bands$eigenval_intervals[2,], each = length(t_paf)),
val_upper = rep(eigen_bands$eigenval_intervals[3,], each = length(t_paf)))
eigen_bands_tibble %>%
ggplot(aes(x = Frequency)) +
geom_ribbon(aes(ymin = lower, ymax = upper, fill = number), alpha = 0.5) +
geom_line(aes(y = mean)) +
facet_wrap(number ~., labeller = labeller(number = eig_labs)) +
ylab("") +
theme_bw() +
theme(legend.position="none")
eigen_bands$magnitude
Month <- 90
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eigen_bands$magnitude
### Some covariance visualization ###
Group <- 1
Month <- 30
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eigen_bands$magnitude
Month <- 90
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eigen_bands$magnitude
### Some covariance visualization ###
Group <- 1
Month <- 120
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eigen_bands$magnitude
### Some covariance visualization ###
Group <- 0
Month <- 120
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eigen_bands$magnitude
### Some covariance visualization ###
Group <- 0
Month <- 30
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eigen_bands$magnitude
### Some covariance visualization ###
Group <- 1
Month <- 30
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eigen_bands$magnitude
eigen_bands$lower
library(BayesianConditionalFPCA)
library(BayesianConditionalFPCA)
get_variance_effects(mcmc_results, .05)
library(BayesianConditionalFPCA)
get_variance_effects(mcmc_results, .05)
library(BayesianConditionalFPCA)
get_variance_effects(mcmc_results, .05)
library(BayesianConditionalFPCA)
get_variance_effects(mcmc_results, .05)
library(BayesianConditionalFPCA)
get_variance_effects(mcmc_results, .05)
library(BayesianConditionalFPCA)
get_variance_effects(mcmc_results, .05)
K
mcmc_results$Lambda[[1,1]][,,1]
K
mcmc_results$Lambda[[1,1]][,,2]
library(BayesianConditionalFPCA)
get_variance_effects(mcmc_results, .05)
library(BayesianConditionalFPCA)
library(BayesianConditionalFPCA)
get_variance_effects(mcmc_results, .05)
library(BayesianConditionalFPCA)
var_effects <- get_variance_effects(mcmc_results, .05)
library(BayesianConditionalFPCA)
var_effects <- get_variance_effects(mcmc_results, .05)
library(BayesianConditionalFPCA)
var_effects <- get_variance_effects(mcmc_results, .05)
library(BayesianConditionalFPCA)
var_effects <- get_variance_effects(mcmc_results, .05)
var_effects$mean
plot(var_effects[,1],type = "l")
plot(var_effects$mean[,1],type = "l")
plot(var_effects$mean[,2],type = "l")
plot(var_effects$mean[,3],type = "l")
X_paf
plot(var_effects$mean[,4],type = "l")
lines(var_effects$lower[,4])
plot(var_effects$mean[,4],type = "l", ylim = c(-1,1))
lines(var_effects$lower[,4])
var_effects$lower
library(BayesianConditionalFPCA)
var_effects <- get_variance_effects(mcmc_results, .05)
library(BayesianConditionalFPCA)
var_effects <- get_variance_effects(mcmc_results, .05)
library(BayesianConditionalFPCA)
var_effects <- get_variance_effects(mcmc_results, .05)
var_effects$lower
eigen_bands$raw_magnitude
plot(eigen_bands$raw_magnitude,type = "l")
library(BayesianConditionalFPCA)
library(BayesianConditionalFPCA)
var_effects <- get_variance_effects(mcmc_results, .05)
var_effects$lower
var_effects$upper
plot(var_effects$lower[,1])
plot(var_effects$lower[,1],type = "l", ylim = c(-1,1))
lines(var_effects$upper[,1])
library(BayesianConditionalFPCA)
var_effects <- get_variance_effects(mcmc_results, .05)
var_effects
var_effects$lower
var_effects$upper
library(BayesianConditionalFPCA)
var_effects <- get_variance_effects(mcmc_results, .05)
var_effects$lower
var_effects$upper
library(MASS)
library(plot3D)
library(dlnm)
library(BayesianConditionalFPCA)
library(rstan)
library(loo)
library(tidyverse)
setwd("E:/Rcpp stuff/BayesianConditionalFPCA/Rfuns")
source('simulated_data.r')
#matplot(t, t(Y), type = "l", col = "black", xlab = "Time", ylab = "Response")
par(mfrow = c(1,2))
matplot(t, t(Y[1:(n/2),]), type = "l", xlab = "Time", ylab = "Response", col = "black", main = "Group 1")
matplot(t, t(Y[(n/2 + 1):n,]), type = "l", xlab = "Time", ylab = "Response", col = "black", main = "Group 2")
par(mfrow = c(1,1))
### MCMC ###
K <- 4
Basis <- ps(t, df = 16, intercept = TRUE)
mcmc_results <- run_mcmc_Morris(Y, t, X, X, Basis, K, iter = 5000, burnin = 5000, nchains = 1, thin = 3, loglik = 1)
### Visualization ###
sub <- 10
posterior_intervals <- get_posterior_predictive_bands2(mcmc_results, c(.025, .5, .975))
colnames(posterior_intervals) <- c("ID", "Time", "Y", "Lower_P", "Median_P", "Upper_P", "Lower_M", "Median_M", "Upper_M")
X
var_effects <- get_variance_effects(mcmc_results, .05)
var_effects$lower
var_effects$upper
### Some covariance visualization ###
sub <- 51
evals <- 2
zi <- X[sub, ]
alpha <- .05
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
persp3D(t, t, eigen_bands$surface)
### Some covariance visualization ###
sub <- 1
evals <- 2
zi <- X[sub, ]
alpha <- .05
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
persp3D(t, t, eigen_bands$surface)
diag(eigen_bands$surface)
### Some covariance visualization ###
sub <- 51
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
diag(eigen_bands$surface)
### Some covariance visualization ###
sub <- 1
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
diag(eigen_bands$surface)
evals <- 2
### Some covariance visualization ###
sub <- 1
evals <- 2
zi <- X[sub, ]
alpha <- .05
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
surface1 <- eigen_bands$surface
X
### Some covariance visualization ###
sub <- 100
evals <- 2
zi <- X[sub, ]
alpha <- .05
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
surface2 <- eigen_bands$surface
surface1 == surface2
diag(surface1)
diag(surface2)
var_effects$lower
var_effects$upper
var_effects$mean
surface1
diag(surface1)
diag(surface2)
var_effects$mean
library(BayesianConditionalFPCA)
var_effects <- get_variance_effects(mcmc_results, .05)
var_effects$mean
var_effects$lower
var_effects$upper
plot(var_effects$lower,type="l")
plot(var_effects$lower[,2],type="l")
plot(var_effects$upper[,2],type="l")
plot(var_effects$lower[,2],type="l", ylim = c(0,1))
plot(var_effects$lower[,2],type="l", ylim = c(-.5,1))
lines(var_effects$upper[,2])
Basis <- ps(t_paf, df = 16, intercept = TRUE)
### MCMC ###
K <- 3
mcmc_results <- run_mcmc_Morris(Y_paf, t_paf, X_paf, X_paf, Basis, K, iter = 5000, burnin = 10000, nchains = 1, thin = 5, loglik = 1)
var_effects <- get_variance_effects(mcmc_results, .05)
var_effects$lower
var_effects$upper
X_red <- cbind(X, rnorm(n))
mcmc_results <- run_mcmc_Morris(Y, t, X_red, X_red, Basis, K, iter = 5000, burnin = 5000, nchains = 1, thin = 3, loglik = 1)
Basis <- ps(t, df = 16, intercept = TRUE)
X_red <- cbind(X, rnorm(n))
mcmc_results <- run_mcmc_Morris(Y, t, X_red, X_red, Basis, K, iter = 5000, burnin = 5000, nchains = 1, thin = 3, loglik = 1)
var_effects <- get_variance_effects(mcmc_results, .05)
var_effects$lower
var_effects$upper
library(BayesianConditionalFPCA)
var_effects <- get_variance_effects(mcmc_results, .05)
var_effects$lower
var_effects$upper
var_effects$mean
plot(var_effects$mean,type = "l")
plot(var_effects$mean[,1],type = "l")
plot(var_effects$mean[,1],type = "l", ylim = c(0, 1))
lines(var_effects$mean[,2])
lines(var_effects$mean[,3])
Basis <- ps(t_paf, df = 16, intercept = TRUE)
# X_paf columns
# Column 1: Intercept
# Column 2: Group. 0 = TD, 1 = ASD
# Column 3: Age
# Column 4: Interaction of group and age
### MCMC ###
K <- 3
mcmc_results <- run_mcmc_Morris(Y_paf, t_paf, X_paf, X_paf, Basis, K, iter = 5000, burnin = 10000, nchains = 1, thin = 5, loglik = 1)
var_effects <- get_variance_effects(mcmc_results, .05)
plot(var_effects$mean[,1])
plot(var_effects$mean[,1], type = "l")
max(var_effects$mean)
plot(var_effects$mean[,1], type = "l", ylim = c(0, 1))
lines(var_effects$mean[,2])
lines(var_effects$mean[,3])
lines(var_effects$mean[,4])
plot(var_effects$mean[,1], type = "l", ylim = c(0, 1))
lines(var_effects$mean[,4])
X_paf[,4]
### Some covariance visualization ###
Group <- 1
Month <- 90
poly_coef <- predict(poly_age, Month)
zi <- c(1, Group, poly_coef, Group * poly_coef)
evals <- 3
eigen_bands <- get_posterior_eigen2(mcmc_results, evals, zi, alpha)
eig_names <- c()
# plot(eigen_bands$raw_magnitude, type = "l")
par(mfrow = c(1,1))
persp3D(t_paf, t_paf, eigen_bands$surface)
