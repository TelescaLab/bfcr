Q <- precmat.IGMRFreglat(12, 4, order = 2)
Q1 <- precmat.RW2(12)
Q2 <- precmat.RW2(4)
Q3 <- kron(as.matrix(Q1), diag(4))
Q4 <- kron(diag(12), as.matrix(Q2))
Q5 <- kron(diag(4), as.matrix(Q1))
Q6 <- kron(as.matrix(Q2), diag(12))
Q7 <- precmat.IGMRFreglat(4, 12, order = 2)
matlistmean <- list()
#matlistmean[[1]] <- Q
matlistmean[[1]] <- Q3
matlistmean[[2]] <- Q4
matlistvar <- list()
#matlistvar[[1]] <- as.matrix(Q5)
matlistvar[[1]] <- Q3
matlistvar[[2]] <- Q4
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 1, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
subj <- 32
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 33
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 1
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 2
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 3
plot(Y[subj,])
lines(pars$fit[subj,])
#####################################################################
################### MEAN AND VARIANCE FUNCTIONS #####################
#####################################################################
n <- 50
tmax <- 100
t <- seq(from = 0, to = 1, length.out = tmax)
p <- 12
B <- bs(t, df = p, intercept = TRUE)
int_function <- 1*(t-.5*t^2)
x_function <- t*sin(2*pi*t)
#x_function <- .2*sqrt(t)
lbasis1_int <- .2*(1-1*(t-.5)^2)
#lbasis1_int <- rep(0, length(t))
#lbasis1_int <- .25*cos(t*pi)
lbasis2_int <- .25*sin(t*pi)
lbasis1_z <- .25*exp(cos(t))
lbasis2_z <- .25*exp(sin(t))
#lbasis1_z <- rep(0, length(t))
#lbasis2_z <- rep(0, length(t))
#####################################################################
####################### DATA GENERATION #############################
#####################################################################
X <- cbind(rep(1,n), rnorm(n, sd = 1))
Age <- X[,2]
AgeBasis <- smooth.construct(s(Age, bs = "ps", k = 10), data.frame(Age), NULL)
noise_sd <- .1
# E <- matrix(rnorm(tmax * n,sd=noise_sd), nrow = n, ncol = tmax)
E <- matrix(0, nrow = n, ncol = tmax)
for(i in 1:n){
# E[i, ] <- rnorm(tmax, mean = 0, sd = noise_sd + (i %% 5) * noise_sd / 5)
E[i, ] <- rnorm(tmax, mean = 0, sd = noise_sd)
}
mean_fn <- cbind(int_function, x_function)
mean_grid <- cbind(int_function, x_function) %*% t(X)
basis1_fn <- cbind(lbasis1_int, lbasis1_z)
basis2_fn <- cbind(lbasis2_int, lbasis2_z)
basis1_grid <- cbind(lbasis1_int, lbasis1_z) %*% t(X)
basis2_grid <- cbind(lbasis2_int, lbasis2_z) %*% t(X)
Eta1 <- rnorm(n, sd = sqrt(1))
Eta2 <- rnorm(n, sd = sqrt(1))
Y_mean <- t(mean_grid)
Y_no_error <-  t(mean_grid) + diag(Eta1)%*%t(basis1_grid) + diag(Eta2)%*%t(basis2_grid)
Y <- Y_no_error + E
Z <- cbind(rep(1, n))
library(spam)
Age <- X[,2]
TBasis <- smooth.construct(s(t, bs = "ps", k = 12), data.frame(t), NULL)
AgeBasis <- smooth.construct(s(Age, bs = "ps", k = 4), data.frame(Age), NULL)
Q <- precmat.IGMRFreglat(12, 4, order = 2)
Q1 <- precmat.RW2(12)
Q2 <- precmat.RW2(4)
Q3 <- kron(as.matrix(Q1), diag(4))
Q4 <- kron(diag(12), as.matrix(Q2))
Q5 <- kron(diag(4), as.matrix(Q1))
Q6 <- kron(as.matrix(Q2), diag(12))
Q7 <- precmat.IGMRFreglat(4, 12, order = 2)
matlistmean <- list()
#matlistmean[[1]] <- Q
matlistmean[[1]] <- Q3
matlistmean[[2]] <- Q4
matlistvar <- list()
#matlistvar[[1]] <- as.matrix(Q5)
matlistvar[[1]] <- Q3
matlistvar[[2]] <- Q4
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 1, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
subj <- 3
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 2
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 1
plot(Y[subj,])
lines(pars$fit[subj,])
#matlistmean[[1]] <- Q
matlistmean[[1]] <- Q5
matlistmean[[2]] <- Q6
matlistvar <- list()
#matlistvar[[1]] <- as.matrix(Q5)
matlistvar[[1]] <- Q5
matlistvar[[2]] <- Q6
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 1, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
subj <- 1
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 2
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 3
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 4
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 5
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 6
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 7
plot(Y[subj,])
lines(pars$fit[subj,])
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
subj <- 7
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 1
plot(Y[subj,])
lines(pars$fit[subj,])
myQ <- matlistmean[[1]] + matlistmean[[2]]
dim(myQ)
c(pars$Beta) %*% myQ %*% c(pars$Beta)
install.packages("corpcor")
c(pars$Beta) %*% pinv(pinv(myQ)) %*% c(pars$Beta)
devtools::document()
devtools::document()
devtools::document()
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
pars$BlkDiagVar[[1]]
pars$BlkDiagVar[[2]]
pars$BlkDiagVar[[3]]
length(pars$BlkdDiagMean)
length(pars$BlkdDiagVar)
attributes(pars$BlkDiagVar)
pars$BlkDiagVar[,,1] == pars$BlkDiagVar[,,2]
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
plot(pars$log_post, type = "l")
devtools::document()
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
plot(pars$log_post, type = "l")
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 6, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
lines(pars$log_post, col="blue")
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 2, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
lines(pars$log_post, col="red")
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
lines(pars$log_post, col="green")
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 4, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
lines(pars$log_post, col="purple")
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
plot(pars$log_post, type = "l",col="purple")
#matlistmean[[1]] <- Q
matlistmean[[1]] <- Q3
matlistmean[[2]] <- Q4
matlistvar <- list()
#matlistvar[[1]] <- as.matrix(Q5)
matlistvar[[1]] <- Q3
matlistvar[[2]] <- Q4
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
lines(pars$log_post)
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
lines(pars$log_post)
#matlistmean[[1]] <- Q
matlistmean[[1]] <- Q5
matlistmean[[2]] <- Q6
matlistvar <- list()
#matlistvar[[1]] <- as.matrix(Q5)
matlistvar[[1]] <- Q5
matlistvar[[2]] <- Q6
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
lines(pars$log_post, col = "purple")
Q5 + Q6 == Q7
Q5 + Q6 == as.matrix(Q7)
Q5 + Q6 == as.matrix(QQ)
Q5 + Q6 == as.matrix(Q)
matlistmean <- list()
matlistmean[[1]] <- Q
matlistvar <- list()
matlistvar[[1]] <- as.matrix(Q5)
matlistvar[[1]] <- as.matrix(Q)
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1,1), c(1,1))
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1), c(1))
Q <- as.matrix(precmat.IGMRFreglat(12, 4, order = 2))
matlistmean[[1]] <- Q
matlistvar[[1]] <- Q
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1), c(1))
lines(pars$log_post, col = "orange")
matlistmean[[1]] <- Q7
matlistvar[[1]] <- Q7
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1), c(1))
Q7 <- as.matrix(precmat.IGMRFreglat(4, 12, order = 2))
matlistmean <- list()
matlistmean[[1]] <- Q7
matlistvar[[1]] <- Q7
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1), c(1))
lines(pars$log_post, col = "green")
devtools::document()
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 500, matlistmean,
matlistvar, c(1), c(1))
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 5000, matlistmean,
matlistvar, c(1), c(1))
#####################################################################
################### MEAN AND VARIANCE FUNCTIONS #####################
#####################################################################
n <- 500
tmax <- 100
t <- seq(from = 0, to = 1, length.out = tmax)
p <- 12
B <- bs(t, df = p, intercept = TRUE)
int_function <- 1*(t-.5*t^2)
x_function <- t*sin(2*pi*t)
#x_function <- .2*sqrt(t)
lbasis1_int <- .2*(1-1*(t-.5)^2)
#lbasis1_int <- rep(0, length(t))
#lbasis1_int <- .25*cos(t*pi)
lbasis2_int <- .25*sin(t*pi)
lbasis1_z <- .25*exp(cos(t))
lbasis2_z <- .25*exp(sin(t))
#lbasis1_z <- rep(0, length(t))
#lbasis2_z <- rep(0, length(t))
#####################################################################
####################### DATA GENERATION #############################
#####################################################################
X <- cbind(rep(1,n), rnorm(n, sd = 1))
Age <- X[,2]
AgeBasis <- smooth.construct(s(Age, bs = "ps", k = 10), data.frame(Age), NULL)
noise_sd <- .1
# E <- matrix(rnorm(tmax * n,sd=noise_sd), nrow = n, ncol = tmax)
E <- matrix(0, nrow = n, ncol = tmax)
for(i in 1:n){
# E[i, ] <- rnorm(tmax, mean = 0, sd = noise_sd + (i %% 5) * noise_sd / 5)
E[i, ] <- rnorm(tmax, mean = 0, sd = noise_sd)
}
mean_fn <- cbind(int_function, x_function)
mean_grid <- cbind(int_function, x_function) %*% t(X)
basis1_fn <- cbind(lbasis1_int, lbasis1_z)
basis2_fn <- cbind(lbasis2_int, lbasis2_z)
basis1_grid <- cbind(lbasis1_int, lbasis1_z) %*% t(X)
basis2_grid <- cbind(lbasis2_int, lbasis2_z) %*% t(X)
Eta1 <- rnorm(n, sd = sqrt(1))
Eta2 <- rnorm(n, sd = sqrt(1))
Y_mean <- t(mean_grid)
Y_no_error <-  t(mean_grid) + diag(Eta1)%*%t(basis1_grid) + diag(Eta2)%*%t(basis2_grid)
Y <- Y_no_error + E
Z <- cbind(rep(1, n))
library(spam)
Age <- X[,2]
TBasis <- smooth.construct(s(t, bs = "ps", k = 12), data.frame(t), NULL)
AgeBasis <- smooth.construct(s(Age, bs = "ps", k = 4), data.frame(Age), NULL)
Q <- as.matrix(precmat.IGMRFreglat(12, 4, order = 2))
Q1 <- precmat.RW2(12)
Q2 <- precmat.RW2(4)
Q3 <- kron(as.matrix(Q1), diag(4))
Q4 <- kron(diag(12), as.matrix(Q2))
Q5 <- kron(diag(4), as.matrix(Q1))
Q6 <- kron(as.matrix(Q2), diag(12))
Q7 <- as.matrix(precmat.IGMRFreglat(4, 12, order = 2))
matlistmean <- list()
matlistmean[[1]] <- Q7
matlistmean[[1]] <- Q5
matlistmean[[2]] <- Q6
matlistvar <- list()
matlistvar[[1]] <- Q7
matlistvar[[1]] <- Q5
matlistvar[[2]] <- Q6
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 5000, matlistmean,
matlistvar, c(1), c(1))
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 5000, matlistmean,
matlistvar, c(1,1), c(1,1))
devtools::document()
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 5000, matlistmean,
matlistvar, c(1,1), c(1,1))
devtools::document()
pars_em <- cpp_EM2(AgeBasis$X, B = TBasis$X, Y, K = 3, tol = 1e-8, max_iter = 5000)
devtools::document()
pars_em <- cpp_EM2(AgeBasis$X, B = TBasis$X, Y, K = 3, tol = 1e-8, max_iter = 5000)
microbenchmark(pars_em <- cpp_EM2(AgeBasis$X, B = TBasis$X, Y, K = 3, tol = 1e-8, max_iter = 1000), times = 1)
microbenchmark::microbenchmark(pars_em <- cpp_EM2(AgeBasis$X, B = TBasis$X, Y, K = 3, tol = 1e-8, max_iter = 1000), times = 1)
microbenchmark::microbenchmark(pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 1000, matlistmean,
matlistvar, c(1,1), c(1,1)), times = 1)
microbenchmark::microbenchmark(pars_em <- cpp_EM2(AgeBasis$X, B = TBasis$X, Y, K = 3, tol = 1e-8, max_iter = 1000), times = 1)
AgeBasis <- smooth.construct(s(Age, bs = "ps", k = 8), data.frame(Age), NULL)
Q <- as.matrix(precmat.IGMRFreglat(12, 4, order = 2))
matlistmean[[1]] <- Q
matlistmean <- list()
matlistmean[[1]] <- Q
matlistvar <- list()
matlistvar[[1]] <- Q
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 1000, matlistmean,
matlistvar, c(1,1), c(1,1))
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 1000, matlistmean,
matlistvar, c(1), c(1))
subj <- 1
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 2
plot(Y[subj,])
lines(pars$fit[subj,])
subj <- 3
plot(Y[subj,])
lines(pars$fit[subj,])
matlistmean[[1]] <- Q7
matlistvar[[1]] <- Q7
pars <- my_main(Y, AgeBasis$X, AgeBasis$X, TBasis$X, 3, 1000, matlistmean,
matlistvar, c(1), c(1))
lines(pars$fit[subj,])
#####################################################################
################### MEAN AND VARIANCE FUNCTIONS #####################
#####################################################################
n <- 5000
tmax <- 100
t <- seq(from = 0, to = 1, length.out = tmax)
p <- 12
B <- bs(t, df = p, intercept = TRUE)
int_function <- 1*(t-.5*t^2)
x_function <- t*sin(2*pi*t)
#x_function <- .2*sqrt(t)
lbasis1_int <- .2*(1-1*(t-.5)^2)
#lbasis1_int <- rep(0, length(t))
#lbasis1_int <- .25*cos(t*pi)
lbasis2_int <- .25*sin(t*pi)
lbasis1_z <- .25*exp(cos(t))
lbasis2_z <- .25*exp(sin(t))
#lbasis1_z <- rep(0, length(t))
#lbasis2_z <- rep(0, length(t))
#####################################################################
####################### DATA GENERATION #############################
#####################################################################
X <- cbind(rep(1,n), rnorm(n, sd = 1))
Age <- X[,2]
AgeBasis <- smooth.construct(s(Age, bs = "ps", k = 10), data.frame(Age), NULL)
noise_sd <- .1
# E <- matrix(rnorm(tmax * n,sd=noise_sd), nrow = n, ncol = tmax)
E <- matrix(0, nrow = n, ncol = tmax)
for(i in 1:n){
# E[i, ] <- rnorm(tmax, mean = 0, sd = noise_sd + (i %% 5) * noise_sd / 5)
E[i, ] <- rnorm(tmax, mean = 0, sd = noise_sd)
}
mean_fn <- cbind(int_function, x_function)
mean_grid <- cbind(int_function, x_function) %*% t(X)
basis1_fn <- cbind(lbasis1_int, lbasis1_z)
basis2_fn <- cbind(lbasis2_int, lbasis2_z)
basis1_grid <- cbind(lbasis1_int, lbasis1_z) %*% t(X)
basis2_grid <- cbind(lbasis2_int, lbasis2_z) %*% t(X)
Eta1 <- rnorm(n, sd = sqrt(1))
Eta2 <- rnorm(n, sd = sqrt(1))
Y_mean <- t(mean_grid)
Y_no_error <-  t(mean_grid) + diag(Eta1)%*%t(basis1_grid) + diag(Eta2)%*%t(basis2_grid)
Y <- Y_no_error + E
Z <- cbind(rep(1, n))
library(spam)
Age <- X[,2]
TBasis <- smooth.construct(s(t, bs = "ps", k = 12), data.frame(t), NULL)
AgeBasis <- smooth.construct(s(Age, bs = "ps", k = 8), data.frame(Age), NULL)
Q <- as.matrix(precmat.IGMRFreglat(12, 4, order = 2))
matlistmean <- list()
matlistmean[[1]] <- Q
matlistvar <- list()
matlistvar[[1]] <- Q
pars_em <- cpp_EM2(AgeBasis$X, B = TBasis$X, Y, K = 3, tol = 1e-8, max_iter = 5000)
Q3
Q5
#####################################################################
################### MEAN AND VARIANCE FUNCTIONS #####################
#####################################################################
n <- 50
tmax <- 100
t <- seq(from = 0, to = 1, length.out = tmax)
p <- 12
B <- bs(t, df = p, intercept = TRUE)
int_function <- 1*(t-.5*t^2)
x_function <- t*sin(2*pi*t)
#x_function <- .2*sqrt(t)
lbasis1_int <- .2*(1-1*(t-.5)^2)
#lbasis1_int <- rep(0, length(t))
#lbasis1_int <- .25*cos(t*pi)
lbasis2_int <- .25*sin(t*pi)
lbasis1_z <- .25*exp(cos(t))
lbasis2_z <- .25*exp(sin(t))
#lbasis1_z <- rep(0, length(t))
#lbasis2_z <- rep(0, length(t))
#####################################################################
####################### DATA GENERATION #############################
#####################################################################
X <- cbind(rep(1,n), rnorm(n, sd = 1))
Age <- X[,2]
AgeBasis <- smooth.construct(s(Age, bs = "ps", k = 10), data.frame(Age), NULL)
noise_sd <- .1
# E <- matrix(rnorm(tmax * n,sd=noise_sd), nrow = n, ncol = tmax)
E <- matrix(0, nrow = n, ncol = tmax)
for(i in 1:n){
# E[i, ] <- rnorm(tmax, mean = 0, sd = noise_sd + (i %% 5) * noise_sd / 5)
E[i, ] <- rnorm(tmax, mean = 0, sd = noise_sd)
}
mean_fn <- cbind(int_function, x_function)
mean_grid <- cbind(int_function, x_function) %*% t(X)
basis1_fn <- cbind(lbasis1_int, lbasis1_z)
basis2_fn <- cbind(lbasis2_int, lbasis2_z)
basis1_grid <- cbind(lbasis1_int, lbasis1_z) %*% t(X)
basis2_grid <- cbind(lbasis2_int, lbasis2_z) %*% t(X)
Eta1 <- rnorm(n, sd = sqrt(1))
Eta2 <- rnorm(n, sd = sqrt(1))
Y_mean <- t(mean_grid)
Y_no_error <-  t(mean_grid) + diag(Eta1)%*%t(basis1_grid) + diag(Eta2)%*%t(basis2_grid)
Y <- Y_no_error + E
Z <- cbind(rep(1, n))
library(spam)
Age <- X[,2]
TBasis <- smooth.construct(s(t, bs = "ps", k = 12), data.frame(t), NULL)
AgeBasis <- smooth.construct(s(Age, bs = "ps", k = 8), data.frame(Age), NULL)
Q <- as.matrix(precmat.IGMRFreglat(12, 4, order = 2))
Q1 <- precmat.RW2(12)
Q2 <- precmat.RW2(4)
Q3 <- kron(as.matrix(Q1), diag(4))
Q4 <- kron(diag(12), as.matrix(Q2))
Q5 <- kron(diag(4), as.matrix(Q1))
Q6 <- kron(as.matrix(Q2), diag(12))
Q7 <- as.matrix(precmat.IGMRFreglat(4, 12, order = 2))
# I think Q7 is correct. Q5 + Q6
matlistmean <- list()
matlistmean[[1]] <- Q
matlistmean[[1]] <- Q5
matlistmean[[2]] <- Q6
matlistvar <- list()
matlistvar[[1]] <- Q
matlistvar[[1]] <- Q5
matlistvar[[2]] <- Q6
pars_em <- cpp_EM2(AgeBasis$X, B = TBasis$X, Y, K = 3, tol = 1e-8, max_iter = 5000)
### Sanity check
subj <- 12
plot(Y[subj,])
mini_sum <- TBasis$X %*% pars_em$Beta %*% X[subj,]
subj <- 1
Age_subj <- X[subj, 2]
Age_df <- data.frame(Age = Age_subj)
new_points <- t(Predict.matrix(AgeBasis, Age_df))
plot(Y[subj,])
mini_sum <- TBasis$X %*% pars_em$Theta %*% new_points
for(k in 1:3){
mini_sum <- mini_sum + pars_em$Eta[k,subj] * TBasis$X %*% pars_em$Lambda[,,k] %*% new_points
}
lines(mini_sum, type = "l")
subj <- 2
Age_subj <- X[subj, 2]
Age_df <- data.frame(Age = Age_subj)
new_points <- t(Predict.matrix(AgeBasis, Age_df))
plot(Y[subj,])
mini_sum <- TBasis$X %*% pars_em$Theta %*% new_points
for(k in 1:3){
mini_sum <- mini_sum + pars_em$Eta[k,subj] * TBasis$X %*% pars_em$Lambda[,,k] %*% new_points
}
lines(mini_sum, type = "l")
subj <- 3
Age_subj <- X[subj, 2]
Age_df <- data.frame(Age = Age_subj)
new_points <- t(Predict.matrix(AgeBasis, Age_df))
plot(Y[subj,])
mini_sum <- TBasis$X %*% pars_em$Theta %*% new_points
for(k in 1:3){
mini_sum <- mini_sum + pars_em$Eta[k,subj] * TBasis$X %*% pars_em$Lambda[,,k] %*% new_points
}
lines(mini_sum, type = "l")
pars_em$precision
1/sqrt(pars_em$precision)
